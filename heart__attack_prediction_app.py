# -*- coding: utf-8 -*-
"""Heart_ Attack_Prediction_app.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WkgvIUqbFhV1xDMfWsFXXK1_Xct1xkJ2
"""
import subprocess
import sys
import streamlit as st

st.set_page_config(page_title="Heart Attack Prediction App", page_icon=":hospital:", layout="wide")

@st.cache
def install(package):
    subprocess.check_call([sys.executable, "-m", "pip", "install", package])
    
install('pickle-mixin')
install('sklearn')

import pickle
import os
import numpy as np
import warnings
warnings.filterwarnings('ignore')

MODEL_PATH=os.path.join(os.getcwd(),'model','best_estimator.pkl')
with open(MODEL_PATH,'rb') as file:
    model=pickle.load(file)

import joblib
import pandas as pd
from PIL import Image

col1, col2 = st.columns(2)

with col1:
    st.title('Heart Attack Prediction App')
    st.write('This Heart Attack Prediction App is to analyse whether you have heart attack or not')
    image = Image.open(os.path.join(os.getcwd(),'static','heart-image.jpg'))
    st.image(image, use_column_width=True)
    
with col2:
    st.subheader('Please fill in the details of the person under consideration and click on the button below!')
    with st.form("Diabetes Predictor App"):
        age = st.number_input("Age", 1, 100)
        sex = st.slider("sex", 0, 1)
        cp = st.sidebar.selectbox('Chest Pain Type ( 0 = asymptomatic ; 1 = typical angina; 2 = atypical angina; 3 = non-anginal pain)',(0,1,2,3))
        trtbps = st.slider("resting blood pressure", 50, 200)
        chol = st.slider("cholesterol level", 100, 600)
        fbs = st.slider("fasting blood sugar", 0, 1)
        rest_ecg = st.slider("resting electrocardiographic results", 0, 1, 2)
        thalach = st.slider("maximum heart rate", 60, 220)
        exng = st.slider("exercise induced angina", 0, 1)
        oldpeak = st.sidebar.slider("ST depression induced by exercise relative to rest",0.0,7.0,0.8,0.1)
        thall = st.slider('number of major vessels', 0.1, 0.2, 3.0)
        caa = st.slider('number of major vessels', 0.0, 3.0)

        # Every form must have a submit button.
        submitted = st.form_submit_button("Analyse")
        if submitted:
            new_data=np.expand_dims(row,axis=0)
            outcome=model.predict(new_data)[0]

            if outcome==0:
                st.subheader("You have no heart attack! Keep it Up!!")
            else:
                st.subheader('From our database, you are predicted to have a heart attack.')

